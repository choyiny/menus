import uuid
from typing import Optional

from mongoengine import (
    BooleanField,
    Document,
    EmbeddedDocument,
    EmbeddedDocumentField,
    ListField,
    ReferenceField,
    StringField,
    URLField,
)


class Tag(EmbeddedDocument):
    """
    A tag for an item.
    """

    icon = StringField(required=True)
    text = StringField(required=True)


class Item(EmbeddedDocument):
    """
    A menu item, contained in a menu.
    """

    image = URLField()
    # image to this menu items

    name = StringField(required=True, default="No name")
    # the name of the item

    price = StringField(default="")
    # price of the item

    tags = ListField(EmbeddedDocumentField(Tag), default=[])
    # a list of tags

    description = StringField(default="No description")
    # description of menu item

    _id = StringField()
    # unique id of menu-item

    def __eq__(self, other):
        return type(self) == type(other) and self._id == other._id


class Section(EmbeddedDocument):
    _id = StringField(required=True)
    name = StringField(required=True, default="New Section")
    description = StringField(default="No description")
    subtitle = StringField()
    menu_items = ListField(EmbeddedDocumentField(Item))

    def __eq__(self, other):
        return type(self) == type(other) and self._id == other._id


class Menu(Document):
    """
    A menu object.
    """

    name = StringField()
    # name of this menu, usually the restaurant name

    sections = ListField(EmbeddedDocumentField(Section))

    # a list of sections in order

    def get_item(self, item_id) -> Optional[Item]:
        for item in self.menu_items:
            if item._id == item_id:
                return item
        return None

    def __eq__(self, other):
        return type(self) == type(other) and self._id == other._id


class Restaurant(Document):
    slug = StringField(primary_key=True, required=True)

    description = StringField()

    image = URLField()

    menus = ListField(ReferenceField(Menu))

    name = StringField()

    # force covid19 tracing modal
    force_trace = BooleanField(default=False)

    # enable tracing on qr_code
    enable_trace = BooleanField(default=False)

    # key for tracing generated by tracing.pickeasy.ca
    tracing_key = StringField()
